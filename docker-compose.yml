version: '3.2'

services:
  elasticsearch:
    container_name: elasticsearch
    # build:
    #   context: elasticsearch/
    #   args:
    #     ELK_VERSION: $ELK_VERSION
    image: "docker.elastic.co/elasticsearch/elasticsearch:${ELK_VERSION}"
    volumes:
      # - type: bind
      #   source: ./elasticsearch/config/elasticsearch.yml
      #   target: /usr/share/elasticsearch/config/elasticsearch.yml
      #   read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    networks:
      - elk

  logstash:
    container_name: logstash
    image: "docker.elastic.co/logstash/logstash:${ELK_VERSION}"
    # build:
    #   context: logstash/
    #   args:
    #     ELK_VERSION: $ELK_VERSION
    volumes:
      # - type: bind
      #   source: ./logstash/config/logstash.yml
      #   target: /usr/share/logstash/config/logstash.yml
      #   read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    container_name: kibana
    image: "docker.elastic.co/kibana/kibana:${ELK_VERSION}"
    # build:
    #   context: kibana/
    #   args:
    #     ELK_VERSION: $ELK_VERSION
    # volumes:
    #   - type: bind
    #     source: ./kibana/config/kibana.yml
    #     target: /usr/share/kibana/config/kibana.yml
    #     read_only: true
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch

#   filebeat:
#     container_name: filebeat
#     image: "docker.elastic.co/beats/filebeat:${ELK_VERSION}"
#     depends_on:
#       - elasticsearch
#       - kibana
#       - logstash
#     user: root
#     networks:
#       - elk
#     volumes:
#       - filebeat:/usr/share/filebeat/data
#     environment:
#       - ELASTICSEARCH_HOST=${ELASTICSEARCH_HOST:-elasticsearch}
#       - KIBANA_HOST=${KIBANA_HOST:-kibana}
#       - ELASTICSEARCH_USERNAME=${ELASTICSEARCH_USERNAME:-elastic}
#       - ELASTICSEARCH_PASSWORD=${ELASTICSEARCH_PASSWORD:-changeme}
#     # disable strict permission checks
#     command: ["--strict.perms=false"]
#     deploy:
#       mode: global      

networks:
  elk:
    driver: bridge

volumes:
  elasticsearch:
#   filebeat:
